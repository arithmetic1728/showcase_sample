# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.longrunning import operations_pb2 as google_dot_longrunning_dot_operations__pb2
from google.showcase_v1beta1.proto import echo_pb2 as google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2


class EchoStub(object):
  """This service is used showcase the four main types of rpcs - unary, server
  side streaming, client side streaming, and bidirectional streaming. This
  service also exposes methods that explicitly implement server delay, and
  paginated calls. Set the 'showcase-trailer' metadata key on any method
  to have the values echoed in the response trailers.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Echo = channel.unary_unary(
        '/google.showcase.v1beta1.Echo/Echo',
        request_serializer=google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2.EchoRequest.SerializeToString,
        response_deserializer=google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2.EchoResponse.FromString,
        )
    self.Expand = channel.unary_stream(
        '/google.showcase.v1beta1.Echo/Expand',
        request_serializer=google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2.ExpandRequest.SerializeToString,
        response_deserializer=google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2.EchoResponse.FromString,
        )
    self.Collect = channel.stream_unary(
        '/google.showcase.v1beta1.Echo/Collect',
        request_serializer=google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2.EchoRequest.SerializeToString,
        response_deserializer=google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2.EchoResponse.FromString,
        )
    self.Chat = channel.stream_stream(
        '/google.showcase.v1beta1.Echo/Chat',
        request_serializer=google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2.EchoRequest.SerializeToString,
        response_deserializer=google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2.EchoResponse.FromString,
        )
    self.PagedExpand = channel.unary_unary(
        '/google.showcase.v1beta1.Echo/PagedExpand',
        request_serializer=google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2.PagedExpandRequest.SerializeToString,
        response_deserializer=google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2.PagedExpandResponse.FromString,
        )
    self.Wait = channel.unary_unary(
        '/google.showcase.v1beta1.Echo/Wait',
        request_serializer=google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2.WaitRequest.SerializeToString,
        response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
        )
    self.Block = channel.unary_unary(
        '/google.showcase.v1beta1.Echo/Block',
        request_serializer=google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2.BlockRequest.SerializeToString,
        response_deserializer=google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2.BlockResponse.FromString,
        )


class EchoServicer(object):
  """This service is used showcase the four main types of rpcs - unary, server
  side streaming, client side streaming, and bidirectional streaming. This
  service also exposes methods that explicitly implement server delay, and
  paginated calls. Set the 'showcase-trailer' metadata key on any method
  to have the values echoed in the response trailers.
  """

  def Echo(self, request, context):
    """This method simply echos the request. This method is showcases unary rpcs.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Expand(self, request, context):
    """This method split the given content into words and will pass each word back
    through the stream. This method showcases server-side streaming rpcs.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Collect(self, request_iterator, context):
    """This method will collect the words given to it. When the stream is closed
    by the client, this method will return the a concatenation of the strings
    passed to it. This method showcases client-side streaming rpcs.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Chat(self, request_iterator, context):
    """This method, upon receiving a request on the stream, the same content will
    be passed  back on the stream. This method showcases bidirectional
    streaming rpcs.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def PagedExpand(self, request, context):
    """This is similar to the Expand method but instead of returning a stream of
    expanded words, this method returns a paged list of expanded words.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Wait(self, request, context):
    """This method will wait the requested amount of and then return.
    This method showcases how a client handles a request timing out.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Block(self, request, context):
    """This method will block (wait) for the requested amount of time 
    and then return the response or error.
    This method showcases how a client handles delays or retries.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_EchoServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Echo': grpc.unary_unary_rpc_method_handler(
          servicer.Echo,
          request_deserializer=google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2.EchoRequest.FromString,
          response_serializer=google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2.EchoResponse.SerializeToString,
      ),
      'Expand': grpc.unary_stream_rpc_method_handler(
          servicer.Expand,
          request_deserializer=google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2.ExpandRequest.FromString,
          response_serializer=google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2.EchoResponse.SerializeToString,
      ),
      'Collect': grpc.stream_unary_rpc_method_handler(
          servicer.Collect,
          request_deserializer=google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2.EchoRequest.FromString,
          response_serializer=google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2.EchoResponse.SerializeToString,
      ),
      'Chat': grpc.stream_stream_rpc_method_handler(
          servicer.Chat,
          request_deserializer=google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2.EchoRequest.FromString,
          response_serializer=google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2.EchoResponse.SerializeToString,
      ),
      'PagedExpand': grpc.unary_unary_rpc_method_handler(
          servicer.PagedExpand,
          request_deserializer=google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2.PagedExpandRequest.FromString,
          response_serializer=google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2.PagedExpandResponse.SerializeToString,
      ),
      'Wait': grpc.unary_unary_rpc_method_handler(
          servicer.Wait,
          request_deserializer=google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2.WaitRequest.FromString,
          response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
      ),
      'Block': grpc.unary_unary_rpc_method_handler(
          servicer.Block,
          request_deserializer=google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2.BlockRequest.FromString,
          response_serializer=google_dot_showcase__v1beta1_dot_proto_dot_echo__pb2.BlockResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'google.showcase.v1beta1.Echo', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
